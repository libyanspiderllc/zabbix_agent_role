---
- name: Linux | Copy Zabbix Agent Configuration
  ansible.builtin.template:
    src: templates/zabbix_agentd.conf.j2
    dest: /etc/zabbix/zabbix_agentd.conf
  notify: restart_zabbix_agent

- name: Linux | Create zabbix user home directory
  ansible.builtin.file:
    name: /var/lib/zabbix
    owner: zabbix
    group: zabbix
    state: directory

- name: Linux | Check if Net-SNMP is installed
  ansible.builtin.stat:
    path: /etc/snmp/snmpd.conf
  register: snmpd_installed

- name: Linux | Add Zabbix Server to Net-SNMP config
  ansible.builtin.lineinfile:
    path: /etc/snmp/snmpd.conf
    state: present
    line: com2sec notConfigUser {{zabbix_server_ip}} {{snmpd_community}}
  when: snmpd_installed.stat.exists == true and snmpd_community|length > 0
  notify:
    - restart snmpd

- name: Linux | Add Tripoli Zabbix Server to Net-SNMP config
  ansible.builtin.lineinfile:
    path: /etc/snmp/snmpd.conf
    state: present
    line: com2sec notConfigUser {{zabbix_tip_server_ip}} {{snmpd_community}}
  when: snmpd_installed.stat.exists == true and snmpd_community|length > 0
  notify:
    - restart snmpd

- name: Linux | Copy zabbix agent user parameters files
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /etc/zabbix/zabbix_agentd.d/
    owner: root
  with_fileglob:
    - files/zabbix_agentd.conf.d/*
  notify: restart_zabbix_agent

- name: Linux | Copy zabbix binary scripts
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /usr/local/sbin/
    owner: zabbix
    mode: 755
  with_fileglob:
    - files/bin/*
  notify: restart_zabbix_agent

- name: Linux | Check if .my.cnf is already generated
  ansible.builtin.stat: path=/var/lib/zabbix/.my.cnf
  register: mysql_configured

- name: Linux | Generate random password for zabbix mysql account
  ansible.builtin.command: "openssl rand -base64 15"
  register: random_password
  when:
    - install_mysql_plugin == true
    - mysql_configured.stat.exists == False
    - mysql_installed.stat.exists == True

- name: Linux | Save mysql random password for later user
  ansible.builtin.set_fact:
    mysql_password: "{{ random_password.stdout }}"
  when:
    - install_mysql_plugin == true
    - mysql_configured.stat.exists == False
    - mysql_installed.stat.exists == True

- name: Linux | Create Zabbix MySQL User
  community.mysql.mysql_user:
    name: "zabbix"
    password: "{{ mysql_password }}"
    priv: "*.*:ALL"
  when:
    - install_mysql_plugin == true
    - mysql_configured.stat.exists == False
    - mysql_installed.stat.exists == True

- name: Linux | Upload custom my.cnf for MySQL user
  ansible.builtin.template:
    src: templates/my.cnf.j2
    dest: /var/lib/zabbix/.my.cnf
  notify: restart_zabbix_agent
  when:
    - install_mysql_plugin == true
    - mysql_configured.stat.exists == False
    - mysql_installed.stat.exists == True

- name: Linux | Add zabbix user to nagios group
  ansible.builtin.command: usermod zabbix -G nagios
  when: nagios_installed.stat.exists == True

- name: Linux | Configure zabbix_agent for autostart
  ansible.builtin.service:
    name: zabbix-agent
    enabled: true

- name: Linux | Enable SNMP Daeomn Service
  ansible.builtin.service:
    name: snmpd
    state: started
    enabled: true
